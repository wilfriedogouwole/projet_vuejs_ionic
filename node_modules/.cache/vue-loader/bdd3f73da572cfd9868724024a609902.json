{"remainingRequest":"/media/deathshot/DATA/projet/nouveau/final/concept-tagging/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/media/deathshot/DATA/projet/nouveau/final/concept-tagging/src/views/Game/Game.vue?vue&type=style&index=0&id=7280d876&scoped=true&lang=css","dependencies":[{"path":"/media/deathshot/DATA/projet/nouveau/final/concept-tagging/src/views/Game/Game.vue","mtime":1623259208982},{"path":"/media/deathshot/DATA/projet/nouveau/final/concept-tagging/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/deathshot/DATA/projet/nouveau/final/concept-tagging/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1616796459000},{"path":"/media/deathshot/DATA/projet/nouveau/final/concept-tagging/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/media/deathshot/DATA/projet/nouveau/final/concept-tagging/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/media/deathshot/DATA/projet/nouveau/final/concept-tagging/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgpAaW1wb3J0IHVybCgnaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Sb2JvdG86d2dodEA3MDAmZGlzcGxheT1zd2FwJyk7CgouaW9uLWNvbnRlbnQtZW5kLWdhbWV7CiAgICBtYXJnaW4tdG9wOiAxNTBweDsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7Cn0KCi5pb24tY29udGVudC1lbmQtZ2FtZSBoMSwgLmlvbi1jb250ZW50LWVuZC1nYW1lIGg1ewogICAgY29sb3I6IHdoaXRlOwp9CgouaW9uLWNvbnRlbnQtc3RhcnQtc2NyZWVuewogICAgbWFyZ2luLXRvcDogMzAwcHg7CiAgICBjb2xvcjogd2hpdGU7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7Cgp9CgoKLmlvbi1nYW1lLWNhcmR7CiAgICBtYXJnaW4tdG9wOiAxNTBweDsKICAgIC0taW9uLWJhY2tncm91bmQtY29sb3IgOiB3aGl0ZTsKCn0KCgoKLmlvbi1jb250ZW50LWZvb3RlcnsKICAgIG1hcmdpbi10b3A6IDUwcHg7CiAgICB3aWR0aDogMTAwdnc7CiAgICBkaXNwbGF5OiBmbGV4OwogICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7Cn0KCgoKLmlvbi10b29sYmFyLWluZm97CiAgICBkaXNwbGF5IDogZmxleDsKICAgIGp1c3RpZnktY29udGVudCA6IHNwYWNlLWFyb3VuZDsKCn0KCgoKaW9uLXRvb2xiYXJ7CiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yIDogd2hpdGUgIWltcG9ydGFudDsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKaW9uLWNvbnRlbnR7CiAgICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgICAtLWlvbi1iYWNrZ3JvdW5kLWNvbG9yIDogbGluZWFyLWdyYWRpZW50KDM0OC4wMmRlZywgIzlDMTE3NiA2LjUzJSwgI0Y5M0M0MiA5MC4wMiUpOwp9CgoKLnRpdHJlIHsKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgIG1hcmdpbi10b3A6IDEwJTsKICAgIG1hcmdpbi1yaWdodDogMjAuNSU7Cn0KCmlvbi1pY29uIHsKICAgIGNvbG9yOiAjOUMxMTc2Owp9Cgo="},{"version":3,"sources":["/media/deathshot/DATA/projet/nouveau/final/concept-tagging/src/views/Game/Game.vue"],"names":[],"mappings":"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","file":"/media/deathshot/DATA/projet/nouveau/final/concept-tagging/src/views/Game/Game.vue","sourceRoot":"","sourcesContent":["<template>\n\n    <ion-page>\n\n        <!--------------------------------------------------------------------------------------->\n\n        <ion-header v-if=\"!isGameLaunch\">\n            <ion-toolbar>\n               <ion-button slot=\"start\" href=\"/\" fill=\"clear\"> \n                    <ion-icon slot=\"icon-only\" src=\"/assets/icon/arrow-undo-circle.svg\"></ion-icon> \n               </ion-button>\n                \n                <ion-title class=\"titre\"> Accueil </ion-title>\n            </ion-toolbar>\n        </ion-header>\n\n\n        <ion-content :fullscreen=\"true\" v-if=\"!isGameLaunch && !isGameFinish\">\n            <div class=\"ion-content-start-screen\">\n                <div>\n                    <h1>Au tour de l'équipe {{turnNumber}}</h1>\n                </div>\n                <div class=\"ion-content-button\">\n                    <ion-button color=\"light\" v-on:click=\"LAUNCH_GAME\">Commencer</ion-button>\n                </div>\n            </div>\n\n        </ion-content>\n\n\n        <!-- Si la partie est finie -->\n        <ion-content :fullscreen=\"true\" v-if=\"isGameFinish\">\n\n            <div class=\"ion-content-end-game\">\n                <h1>Partie terminée</h1>\n                <h5 v-if=\"scoreFirstTeam > scoreSecondTeam\">L'équipe 1 remporte la partie</h5>\n                <h5 v-else-if=\"scoreFirstTeam == scoreSecondTeam\">Egalité entre les deux équipes</h5>\n                <h5 v-else-if=\"scoreFirstTeam < scoreSecondTeam\">L'équipe 2 remporte la partie</h5>\n\n                <ion-router-link href=\"/\">\n                    <ion-button color=\"light\" v-on:click=\"LAUNCH_GAME\">Retourner à l'accueil</ion-button>\n                </ion-router-link>\n            </div>\n\n\n        </ion-content>\n\n\n        <!--------------------------------------------------------------------------------------->\n\n        <!--On affiche ce contenu si la partie a été lancé -->\n        <ion-content :fullscreen=\"true\" v-if=\"isGameLaunch\">\n            <!--Header de notre page-->\n            <ion-header>\n                <ion-toolbar>\n                    <ion-title>{{ serie[\"serieName\"] }}</ion-title>\n                </ion-toolbar>\n                <div class=\"ion-toolbar-info\">\n                    <p>Joker : {{joker}}</p>\n                    <p v-if=\"turnNumber === 1\">Score : {{scoreFirstTeam}}</p>\n                    <p v-else>Score :  {{scoreSecondTeam}}</p>\n                    <p>Compteur : {{compteur}}</p>\n                </div>\n            </ion-header>\n\n            <ion-card class=\"ion-game-card\">\n                <ion-card-header>\n                    <ion-card-subtitle>{{serieCardsListIndex + 1}} / {{serieCardsList.length}}</ion-card-subtitle>\n                    <ion-card-title>{{ currentCard['cardName'] }}\n                    </ion-card-title>\n                </ion-card-header>\n\n                <ion-card-content>\n                    <p> - {{ currentCard[\"firstForbiddenWord\"] }}</p>\n                    <p> - {{ currentCard[\"secondForbiddenWord\"] }}</p>\n                    <p> - {{ currentCard[\"thirdForbiddenWord\"] }}</p>\n                    <p> - {{ currentCard[\"fourthForbiddenWord\"] }}</p>\n                </ion-card-content>\n            </ion-card>\n\n\n\n            <!--Les bouttons de jeu-->\n            <footer class=\"ion-content-footer\">\n                <ion-button color=\"success\" v-on:click=\"CARD_FOUND\">Trouver</ion-button>\n                <ion-button color=\"warning\" v-on:click=\"CARD_PASS\">Passer</ion-button>\n                <ion-button color=\"danger\"  v-on:click=\"CARD_TABOO\">Taboo</ion-button>\n            </footer>\n\n        </ion-content>\n\n\n        <!--------------------------------------------------------------------------------------->\n\n\n\n\n\n    </ion-page>\n</template>\n\n<script>\n\nimport axios from 'axios';\n\nexport default {\n    name: \"SerieManagerCreate\",\n    data() {\n        return {\n\n            /**\n             * Pour chaque équipe une serie sera pris aléatoirement\n             */\n\n            allSeries           : null,  //Toutes les séries\n            serie               : null,  //La série de carte qui a été choisie\n            serieCardsList      : null,  //Les cartes de cette série\n            serieCardsListIndex : 0,     //L'index permettant de savoir à quel carte nous somme\n            currentCard         : null,\n\n            compteur            : 60,    //Le temps restant pour le joueur\n            joker               : 3,     //Le nombre de joker restant\n\n            scoreFirstTeam      : 0,     //Le score de l'équipe 1\n            scoreSecondTeam     : 0,     //Le score de l'équipe 2\n\n            isGameLaunch        : false, //Permet de savoir si la partie est lancé\n            isGameFinish        : false, //Permet de savoir si la partie est finis\n            turnNumber          : 1,     //Permet de savoir à quel tour de jeu on est\n\n        }\n    },\n    methods : {\n\n        /**\n         * Permet de lancer la partie\n         * @constructor\n         */\n        LAUNCH_GAME(){\n\n            //On recupère l'index de la serie choisie\n            const serieIndex    = Math.floor(Math.random() * this.allSeries.length)\n\n            //On recupère la liste\n            this.serie          = this.allSeries[serieIndex];\n\n            //On recupère toute les carte de notre liste\n            this.serieCardsList = this.serie[\"cardsList\"];\n\n            //On recupère la première carte\n            this.currentCard    = this.serieCardsList[this.serieCardsListIndex]\n\n            //On lance le compteur\n\n\n\n            /**\n             *  Si la taille de la liste est supérieur à 1 alors\n             *  on supprime celle que nous allons jouer pour que\n             *  la deuxième équipe ne puisse pas la jouer\n             *\n             *  sinon les deux jourons la même série de carte\n             */\n            if(this.serie.length > 1){\n\n                this.allSeries.splice(serieIndex, 1);\n\n            }\n\n\n            this.isGameLaunch = true;\n            this.COUNTDOWN();\n\n        },\n\n\n        /**\n         * Si la carte à était trouver\n         * @constructor\n         */\n        CARD_FOUND(){\n\n\n            //En fonction du tour on ajoute 1 points à la bonne équipe si la carte est trouvé\n            if(this.turnNumber === 1){\n                this.scoreFirstTeam++;\n            }else{\n                this.scoreSecondTeam++;\n            }\n\n            this.CARD_COMMUN();\n\n        },\n\n\n        /**\n         * Si un mot TABOO a été prononcer\n         * @constructor\n         */\n        CARD_TABOO() {\n\n            //En fonction du tour on enlève un point pour le TABOO à la bonne équipe\n            if(this.turnNumber === 1){\n                this.scoreFirstTeam--;\n            }else{\n                this.scoreSecondTeam--;\n            }\n\n            this.CARD_COMMUN();\n\n        },\n\n        /**\n         * Permet d'utiliser un joker et passé la carte\n         */\n        CARD_PASS() {\n\n            //On vérifie qu'il nous reste des jokers de disponible\n            if(this.joker > 0){\n                this.joker--;\n                this.CARD_COMMUN();\n\n            }\n\n\n        },\n\n        /**\n         * Permet de rassembler les instructions commune entre nos fonctions\n         * @constructor\n         */\n        CARD_COMMUN() {\n\n            this.serieCardsListIndex++; //On passe à la carte suivante\n            this.currentCard    = this.serieCardsList[this.serieCardsListIndex]\n\n            //On vérifie si le tour est finis\n\n            if(this.serieCardsListIndex === this.serieCardsList.length){\n\n                this.isGameLaunch        = false; //On remet la fenêtre de lancement\n\n                this.serieCardsListIndex = 0;     //On remet les variables par défaut pour l'équipe 2\n                this.compteur            = 60;\n                this.joker               = 3;\n\n                console.log(this.scoreFirstTeam);\n                console.log(this.scoreSecondTeam);\n\n                //Si ces le tour 2 qui vient de se finir alors la partie est terminé\n                if(this.turnNumber === 2){\n                    this.isGameFinish = true;\n                    this.scoreSecondTeam += this.compteur;\n                    this.GAME_FINISH(); //Une fois la partie fini on sauvegarde la partie dans l'historique\n                }else{\n                    this.scoreFirstTeam += this.compteur;\n                }\n\n                this.turnNumber++; //On pass au tour suivant\n\n            }\n\n        },\n\n        /**\n         * Permet de gérer le compteur\n         * @constructor\n         */\n        COUNTDOWN() {\n            if(this.isGameLaunch){\n                if(this.compteur > 0) {\n                    setTimeout(() => {\n\n                        this.compteur -= 1\n                        this.COUNTDOWN()\n                    }, 1000)\n                }else{\n\n                    this.isGameLaunch = false;\n\n                    if(this.turnNumber === 2){\n                        this.isGameFinish = true;\n                        this.GAME_FINISH(); //Une fois la partie fini on sauvegarde la partie dans l'historique\n\n                    }\n\n\n                }\n\n            }\n        },\n\n        /**\n         * Permet de sauvegarder le résultat de la partie dans l'historique\n         * @constructor\n         */\n        GAME_FINISH(){\n\n            let winner = \"Equipe 1\";\n\n            if(this.scoreFirstTeam > this.scoreSecondTeam){\n                winner = \"Equipe 1\";\n\n            }else if(this.scoreFirstTeam < this.scoreSecondTeam){\n                winner = \"Equipe 2\";\n            }else{\n                winner = \"Egalité\";\n            }\n\n            //On sauvegarde dans l'api\n\n            axios.post(\"https://6060e5e2ac47190017a70428.mockapi.io/gameHistory\", {\n                winner          : winner,\n                scoreFirstTeam  : this.scoreFirstTeam,\n                scoreSecondTeam : this.scoreSecondTeam,\n                playAt          : this.currentDate()\n            })\n                .then(response => {\n\n                    this.allSeries = response[\"data\"];\n\n                })\n                .catch(error => {\n\n                    console.log(error);\n\n                })\n\n        },\n\n        /**\n         * Permet d'obtenir la date en cours\n         * source : https://reactgo.com/vue-get-current-date/\n         * @returns {string}\n         */\n        currentDate() {\n            const current = new Date();\n            const date = `${current.getDate()}/${current.getMonth()+1}/${current.getFullYear()}`;\n            return date;\n        }\n\n    },\n    mounted() {\n\n        //On va récupérer toutes nos séries depuis notre API\n\n        axios.get(\"https://6060e5e2ac47190017a70428.mockapi.io/series\")\n            .then(response => {\n\n                this.allSeries = response[\"data\"];\n\n            })\n            .catch(error => {\n\n                console.log(error);\n\n            })\n\n\n    }\n}\n</script>\n\n\n\n<style scoped>\n\n@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@700&display=swap');\n\n.ion-content-end-game{\n    margin-top: 150px;\n    text-align: center;\n    text-transform: uppercase;\n}\n\n.ion-content-end-game h1, .ion-content-end-game h5{\n    color: white;\n}\n\n.ion-content-start-screen{\n    margin-top: 300px;\n    color: white;\n    text-align: center;\n\n}\n\n\n.ion-game-card{\n    margin-top: 150px;\n    --ion-background-color : white;\n\n}\n\n\n\n.ion-content-footer{\n    margin-top: 50px;\n    width: 100vw;\n    display: flex;\n    justify-content: space-around;\n}\n\n\n\n.ion-toolbar-info{\n    display : flex;\n    justify-content : space-around;\n\n}\n\n\n\nion-toolbar{\n    --ion-background-color : white !important;\n    text-align: center;\n}\n\nion-content{\n    position: relative;\n    --ion-background-color : linear-gradient(348.02deg, #9C1176 6.53%, #F93C42 90.02%);\n}\n\n\n.titre {\n    text-align: center;\n    margin-top: 10%;\n    margin-right: 20.5%;\n}\n\nion-icon {\n    color: #9C1176;\n}\n\n</style>"]}]}